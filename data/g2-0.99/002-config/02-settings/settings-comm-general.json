################################################################################
#
#  settings-comm-system-001.json  g2Core communications settings
#
# include 000-init/init-json.json
#
# SKIP
{
  "after_each":{
    "label":"reset parameters for test",
    "after":["{jv:5}", "{tv:1}", "{qv:0}", "{sv:2}", "{si:200}"]
  }
}
# SKIP
{
  "after_all":{
    "label":"Return to home and END PROGRAM",
    "after":["{clear:n}","G28 M30"]
  }
}
#
# JSON Verbosity
#
{
    "t":{"label":"Set JV to 1 (FOOTER only) - returns null r object",
        "send":["{jv:1}"]},
        "after":["{jv:5}"],
        "r":{"status":0}
}
#
{
    "t":{"label":"Set JV to 2 (MESSAGES) - returns null r object",
         "send":["{jv:2}"]},
         "after":["{jv:5}"],
        "r":{"status":0}
}
#
{
    "t":{"label":"Set JV to 3 (CONFIGS)",
         "send":["{jv:3}"]},
         "after":["{jv:5}"],
        "r":{"status":0, "jv":3}
}
#
{
    "t":{"label":"Set JV to 4 (LINENUM)",
         "send":["{jv:4}"]},
         "after":["{jv:5}"],
        "r":{"status":0, "jv":4}
}
#
{
    "t":{"label":"Set JV to 5 (VERBOSE)",
         "send":["{jv:5}"]},
        "r":{"status":0, "jv":5}
}
# SKIP
{
    "t":{"label":"Set JV to 6 - EXCEPTION",
         "send":["{jv:6}"]},
         "after":["{jv:5}"],
        "r":{"status":110, "jv":null}
}
#
{
    "t":{"label":"Set JV to -1 - EXCEPTION",
         "send":["{jv:-1}"]},
         "after":["{jv:5}"],
        "r":{"status":110, "jv":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{jv:true}",
                 "{jv:false}",
                 "{jv:1.0}",
                 "{jv:1.1}",
                 "{jv:\"1\"}"
                ]},
        "r":{"status":117, "jv":null}
}
# Text Verbosity
{
    "t":{"label":"Set TV to 0 (SILENT)",
         "send":["{tv:0}"]},
         "after":["{tv:1}"],
        "r":{"status":0, "tv":0}
}
#
{
    "t":{"label":"Set TV to 1 (VERBOSE)",
         "send":["{tv:1}"]},
        "r":{"status":0, "tv":1}
}
#
{
    "t":{"label":"Read TV",
         "send":["{tv:null}"]},
        "r":{"status":0, "tv":1}
}
#
{
    "t":{"label":"Set TV out of range",
         "send":["{tv:-1}",
                 "{tv:2}"
                ]},
        "r":{"status":110, "tv":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{tv:true}",
                 "{tv:false}",
                 "{tv:1.0}",
                 "{tv:1.1}",
                 "{tv:\"1\"}"
                ]},
        "r":{"status":117, "tv":null}
}
# Queue Report Verbosity
{
    "t":{"label":"Set QV to 0 (SILENT)",
         "send":["{qv:0}"]},
        "r":{"status":0, "qv":0}
}
#
{
    "t":{"label":"Set QV to 1 (SINGLE)",
         "send":["{qv:1}"]},
         "after":["{qv:0}"],
        "r":{"status":0, "qv":1}
}
#
{
    "t":{"label":"Set QV to 2 (TRIPLE)",
         "send":["{qv:2}"]},
        "r":{"status":0, "qv":2}
}
#
{
    "t":{"label":"Read QV - was set to 2 by preceding test",
         "send":["{qv:null}"]},
        "r":{"status":0, "qv":2}
}
#
{
    "t":{"label":"Set QV out of range",
         "send":["{qv:-1}"]},
        "r":{"status":110, "qv":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{qv:true}",
                 "{qv:false}",
                 "{qv:1.0}",
                 "{qv:1.1}",
                 "{qv:\"1\"}"
                ]},
        "r":{"status":117, "qv":null}
}
# Status Report Verbosity
{
    "t":{"label":"Set SV to 0 (SILENT)",
         "send":["{sv:0}"]},
        "r":{"status":0, "sv":0}
}
#
{
    "t":{"label":"Set SV to 1 (FILTERED)",
         "send":["{sv:1}"]},
        "r":{"status":0, "sv":1}
}
#
{
    "t":{"label":"Set SV to 2 (VERBOSE)",
         "send":["{sv:2}"]},
        "r":{"status":0, "sv":2}
}
#
{
    "t":{"label":"Read SV",
         "send":["{sv:null}"]},
        "r":{"status":0, "sv":2}
}
#
{
    "t":{"label":"Set SV out of range",
         "send":["{sv:-1}",
                 "{sv:3}"
                ]},
        "r":{"status":110, "sv":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{sv:true}",
                 "{sv:false}",
                 "{sv:1.0}",
                 "{sv:1.1}",
                 "{sv:\"1\"}"
                ]},
        "r":{"status":117, "sv":null}
}
# Status Report Interval
{
    "t":{"label":"Set SI to 0 - below Minumum",
         "send":["{si:0}"]},
        "r":{"status":0, "si":200}
}
#
{
    "t":{"label":"Set SI to 1 - nomimal value",
         "send":["{si:250}"]},
        "r":{"status":0, "si":250}
}
#
{
    "t":{"label":"Set SI to something very large",
         "send":["{si:20000}"]},
        "r":{"status":0, "si":20000}
}
#
{
    "t":{"label":"Read SI",
         "send":["{si:null}"]},
        "r":{"status":0, "si":20000}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{si:true}",
                 "{si:false}",
                 "{si:1.0}",
                 "{si:1.1}",
                 "{si:\"1\"}"
                ]},
        "r":{"status":117, "si":null}
}
#
# None of the following are implemented or needed on g2core
#
# EOF
#
# Enable CRLF expansion on TX (EC)
#
{
    "t":{"label":"Enable CRLF expansion using '1'",
         "send":["{ec:1}"]},
        "r":{"status":0, "ec":1}
}
#
{
    "t":{"label":"Disable CRLF expansion using '0'",
         "send":["{ec:0}"]},
        "r":{"status":0, "ec":0}
}
#
{
    "t":{"label":"Enable CRLF expansion on TX",
         "send":["{ec:true}"]},
        "r":{"status":0, "ec":true}
}
#
{
    "t":{"label":"Disable CRLF expansion on TX",
         "send":["{ec:false}"]},
        "r":{"status":0, "ec":false}
}
#
{
    "t":{"label":"Read CRLF expansion on TX setting",
         "send":["{ec:null}"]},
        "r":{"status":0, "ec":false}
}
#
{
    "t":{"label":"Set CRLF expansion using '2' - EXCEPTION",
         "send":["{ec:2}"]},
        "r":{"status":110, "ec":null}
}
#
{
    "t":{"label":"Set CRLF expansion using '-1' - EXCEPTION",
         "send":["{ec:-1}"]},
        "r":{"status":110, "ec":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{ec:1.0}",
                 "{ec:\"1\"}"
                ]},
        "r":{"status":117, "ec":null}
}
# Enable echo (EE)
{
    "t":{"label":"Enable echo",
         "send":["{ee:true}"],
         "after":["{ee:false}"]},
        "r":{"status":0, "ee":true}
}
#
{
    "t":{"label":"Disable echo",
         "send":["{ee:false}"]},
        "r":{"status":0, "ee":false}
}
#
{
    "t":{"label":"Read echo setting",
         "send":["{ee:null}"]},
        "r":{"status":0, "ee":false}
}
#
{
    "t":{"label":"Enable echo using '1'",
         "send":["{ee:1}"],
         "after":["{ee:0}"]},
        "r":{"status":0, "ee":1}
}
#
{
    "t":{"label":"Disable echo using '0'",
         "send":["{ee:0}"]},
        "r":{"status":0, "ee":0}
}
#
{
    "t":{"label":"Set echo using '2'",
         "send":["{ee:2}"]},
        "r":{"status":110, "ee":null}
}
#
{
    "t":{"label":"Set echo using '-1'",
         "send":["{ee:-1}"]},
        "r":{"status":110, "ee":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{ee:1.0}",
                 "{ee:\"1\"}"
                ]},
        "r":{"status":117, "ee":null}
}
# Set flow control (EX)
{
    "t":{"label":"Enable XON/XOFF flow control",
         "send":["{ex:1}"]},
        "r":{"status":0, "ex":1}
}
#
{
    "t":{"label":"Disable flow control",
         "send":["{ex:0}"]},
        "r":{"status":0, "ex":0}
}
#
{
    "t":{"label":"Enable RTS/CTS flow control",
         "send":["{ex:2}"]},
        "r":{"status":0, "ex":2}
}
#
{
    "t":{"label":"Read flow control setting",
         "send":["{ex:null}"]},
        "r":{"status":0, "ex":2}
}
#
{
    "t":{"label":"Set flow control using '3' - EXCEPTION",
         "send":["{ex:3}"]},
        "r":{"status":110, "ex":null}
}
#
{
    "t":{"label":"Set flow control using '-1' - EXCEPTION",
         "send":["{ex:-1}"]},
        "r":{"status":110, "ex":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{ex:true}",
                 "{ex:false}",
                 "{ex:1.0}",
                 "{ex:\"1\"}"
                ]},
        "r":{"status":117, "ex":null}
}
# Set RX mode (RXM)
{
    "t":{"label":"Enable streaming RX",
         "send":["{rxm:0}"]},
        "r":{"status":0, "rxm":0}
}
#
{
    "t":{"label":"Enable linemode RX",
         "send":["{rxm:1}"]},
        "r":{"status":0, "rxm":1}
}
#
{
    "t":{"label":"Read RX mode setting",
         "send":["{rxm:null}"]},
        "r":{"status":0, "rxm":1}
}
#
{
    "t":{"label":"Set RX mode using '2 - EXCEPTION",
         "send":["{rxm:2}"]},
        "r":{"status":110, "rxm":null}
}
#
{
    "t":{"label":"Set RX mode using '-1' - EXCEPTION",
         "send":["{rxm:-1}"]},
        "r":{"status":110, "rxm":null}
}
# SKIP
{
    "t":{"label":"Test various type errors",
         "send":["{rxm:true}",
                 "{rxm:false}",
                 "{rxm:1.0}",
                 "{rxm:\"1\"}"
                ]},
        "r":{"status":117, "rxm":null}
}
