################################################################################
#
#   feedhold-baseline.json - basic feedhold tests
#
#   See feedhold-init file for machine setup instructions
#
# include 004-specials/feedhold/feedhold-init.json
#
# More tests:
#   Send ~ and % while feedhold entry actions are occurring (Z, spindle, coolant)
#   Send ~ and % while feedhold exit actions are occurring (coolant, spindle, delay, Z)
#   Send ~ and % while p2movement is occurring
#   Test spindle delay durations, 0 (off), various delay times
#   Change spindle settings while in p2. Try all combinations - spph:t/f, ON/OFF, S word
#   Change spindle S words while in p2
#   Change coolant settings while in p2. Try all combinations - coph:t/f, ON/OFF, mist, flood
#   Feedhold request received during dwell
#   Feedhold request received during homing (what's the proper handling?)
#   Feedhold request received during probing (what's the proper handling?)
#
# TESTS START HERE
#
# Enter feedhold and exit ~ immediately
#
{
    "t":{"label":"FB-1: Enter feedhold and exit ~ immediately",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!~"],
        "after":["m5 m9"],
        "delay":0.75},
        "r":{"status":0},
        "sr":{"stat":3,"posx":30,"com":1,"cof":1,"spc":1}
}
#
#
# Try to enter a feedhold ! when not in a cycle
#
{
    "t":{"label":"FB-2: Try to enter a feedhold ! when not in a cycle",
        "before":["g0 x1",
                  "g0 x0",
                  "m3 m7 m8"],
        "send":["!","{sr:n}"],
        "after":["m5 m9"]},
        "r":{"status":0},
        "sr":{"stat":3,"posx":0,"com":1,"cof":1,"spc":1}
}
#
# Try to exit a feedhold ~ when not in a feedhold
#
{
    "t":{"label":"FB-3: Try to end a feedhold ~ when not in a feedhold",
        "before":["g0 x0 m3 m7 m8"],
        "send":["~","{sr:n}"],
        "after":["m5 m9"]},
        "r":{"status":0},
        "sr":{"stat":3,"posx":0,"com":1,"cof":1,"spc":1}
}
#
# Try to exit a feedhold % with queue flush when not in a feedhold
#
{
    "t":{"label":"FB-4: Try to end a feedhold % with queue flush when not in a feedhold",
        "before":["g0 x0 m3 m7 m8"],
        "send":["%","{sr:n}"],
        "after":["m5 m9"]},
        "r":{"status":0},
        "sr":{"stat":3,"posx":0,"com":1,"cof":1,"spc":1}
}
#
# Enter feedhold and exit ~ immediately
#
{
    "t":{"label":"FB-5A: Enter feedhold and exit ~ immediately",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!~"],
        "after":["m5 m9"],
        "delay":0.75},
        "r":{"status":0},
        "sr":{"stat":3,"posx":30,"com":1,"cof":1,"spc":1}
}
#
# Enter feedhold and exit ~ immediately, again
#
{
    "t":{"label":"FB-5B: Enter feedhold and exit ~ immediately, again",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!~"],
        "after":["m5 m9"],
        "delay":0.75},
        "r":{"status":0},
        "sr":{"stat":3,"posx":30,"com":1,"cof":1,"spc":1}
}
#
# Enter feedhold and exit % immediately
#
{
    "t":{"label":"FB-6A: Enter feedhold and queue flush % immediately",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!%"],
        "after":["m5 m9"],
        "delay":0.75,
        "precision":1},
        "r":{"status":0},
        "sr":{"stat":3,"com":1,"cof":1,"spc":1}
}
#
# Enter feedhold and exit % immediately, again
#
{
    "t":{"label":"FB-6B: Enter feedhold and queue flush % immediately, again",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!%"],
        "after":["m5 m9"],
        "delay":0.75,
        "precision":1},
        "r":{"status":0},
        "sr":{"stat":3,"com":1,"cof":1,"spc":1}
}
#
# Test sequence !~%  This one is supposed to queue flush
#
{
    "t":{"label":"FB-7: Test sequence !~%  This one is supposed to queue flush",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!~%"],
        "after":["m5 m9"],
        "delay":0.75,
        "precision":1},
        "r":{"status":0},
        "sr":{"stat":3,"com":1,"cof":1,"spc":1}
}
#
# Test sequence !%~  This one is supposed to queue flush
#
{
    "t":{"label":"FB-8: Test sequence !%~  This one is supposed to queue flush",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X30", "!%~"],
        "after":["m5 m9"],
        "delay":0.75,
        "precision":1},
        "r":{"status":0},
        "sr":{"stat":3,"com":1,"cof":1,"spc":1}
}
#
# Shotgun - Run a bunch of commands in seqeunce
#
{
    "t":{"label":"FB-9: Shotgun test - hold, resume, hold-resume, hold, flush",
        "before":["g0 x0 m3 m7 m8"],
        "send":["G1 F1000 X40", "!", "~", "!~", "!", "%"],
        "delay":0.75},
    "r":{"status":0}
}
#
{
    "t":{"label":"FB-10: Sanity moves following shotgun test",
        "send":["G0 X0","G0 X40","G0 X0"],
        "delay":0.75},
    "r":{"status":0}
}
# EOF
